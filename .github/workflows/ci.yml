name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Cache RuboCop
        uses: actions/cache@v4
        with:
          path: tmp/rubocop_cache
          key: rubocop-${{ runner.os }}-${{ hashFiles('**/*.rb', '.rubocop.yml') }}
      - name: RuboCop
        run: |
          mkdir -p tmp/rubocop_cache
          bin/rubocop --display-style-guide --cache true --cache-root tmp/rubocop_cache

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Brakeman
        run: bin/brakeman --no-pager
      - name: Importmap audit
        run: bin/importmap audit

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bankencore_test
        options: >-
          --health-cmd="pg_isready -U postgres -d bankencore_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      RAILS_ENV: test
      DISABLE_SPRING: "1"
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/bankencore_test
      # Set any encryption keys needed for model boot
      # ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY }}
      # ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY }}
      # ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT }}
      CI: "true"
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Prepare DB
        run: bin/rails db:prepare
      - name: RSpec
        run: |
          mkdir -p tmp/test-results
          bin/rspec \
            --force-color \
            --format progress \
            --format RspecJunitFormatter \
            --out tmp/test-results/rspec.xml
      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            tmp/test-results
            log/test.log
            tmp/capybara

  all_checks_pass:
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    steps:
      - run: echo "OK"
